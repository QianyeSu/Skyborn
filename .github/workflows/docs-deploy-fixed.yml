name: "Deploy Documentation (Fixed)"

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-docs.txt
          pip install -e .

      - name: Build English documentation (with warnings as non-fatal)
        run: |
          cd docs
          sphinx-build -b html source/en build/en/html -W --keep-going || true

      - name: Build Chinese documentation (with warnings as non-fatal)
        run: |
          cd docs
          sphinx-build -b html source/zh_CN build/zh_CN/html -W --keep-going || true

      - name: Prepare GitHub Pages structure
        run: |
          mkdir -p _site

          # Check if English docs exist
          if [ -d "docs/build/en/html" ] && [ -f "docs/build/en/html/index.html" ]; then
            cp -r docs/build/en/html/* _site/
            mkdir -p _site/en
            cp -r docs/build/en/html/* _site/en/
            echo "‚úÖ English documentation copied"
          else
            echo "‚ùå English documentation not found, creating placeholder"
            mkdir -p _site
            echo "<h1>Documentation Build Failed</h1><p>English documentation could not be built.</p>" > _site/index.html
          fi

          # Check if Chinese docs exist
          if [ -d "docs/build/zh_CN/html" ] && [ -f "docs/build/zh_CN/html/index.html" ]; then
            mkdir -p _site/zh_CN
            cp -r docs/build/zh_CN/html/* _site/zh_CN/
            echo "‚úÖ Chinese documentation copied"
          else
            echo "‚ùå Chinese documentation not found, skipping"
            mkdir -p _site/zh_CN
            echo "<h1>ÊñáÊ°£ÊûÑÂª∫Â§±Ë¥•</h1><p>‰∏≠ÊñáÊñáÊ°£Êó†Ê≥ïÊûÑÂª∫„ÄÇ</p>" > _site/zh_CN/index.html
          fi

          # Create language selector (overwrite if needed)
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="UTF-8">
              <title>Skyborn Documentation</title>
              <style>
                  body { font-family: Arial, sans-serif; text-align: center; margin-top: 50px; }
                  .language-selector { margin: 20px; }
                  .language-selector a {
                      display: inline-block; margin: 10px; padding: 15px 30px;
                      background-color: #007acc; color: white; text-decoration: none;
                      border-radius: 5px;
                  }
                  .language-selector a:hover { background-color: #005999; }
              </style>
          </head>
          <body>
              <h1>Skyborn Documentation</h1>
              <div class="language-selector">
                  <a href="./en/">English Documentation</a>
                  <a href="./zh_CN/">‰∏≠ÊñáÊñáÊ°£</a>
              </div>
          </body>
          </html>
          EOF

          echo "üìÅ Site structure:"
          find _site -name "*.html" | head -5

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
