name: Test Skyborn Cross-Platform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false  # Don't stop other tests if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libeccodes-dev
          
      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install eccodes
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -e .
          
      - name: Install test dependencies
        run: |
          pip install pytest pytest-cov pytest-xdist
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        shell: bash
        
      - name: Install optional dependencies
        run: |
          # Try to install eccodes, don't fail tests if installation fails
          pip install eccodes || echo "eccodes installation failed, continuing without it"
        shell: bash
        continue-on-error: true
        
      - name: Run basic import test
        run: |
          python -c "import skyborn; print(f'Skyborn {skyborn.__version__} imported successfully')"
          
      - name: Run unit tests
        run: |
          pytest tests/ -v --tb=short
        continue-on-error: false
        
      - name: Test core functionality
        run: |
          python -c "
          import skyborn
          import numpy as np
          
          # Test basic functions
          print('Testing basic functions...')
          data = np.random.rand(10, 10)
          result = skyborn.convert_longitude_range(data, (-180, 180))
          print('✓ convert_longitude_range works')
          
          # Test gradient calculations
          print('Testing gradient calculations...')
          grad = skyborn.calculate_gradient(data, 'test_dim')
          print('✓ calculate_gradient works')
          
          print('All core functions working!')
          "
          
      - name: Test GRIB conversion (if eccodes available)
        run: |
          python -c "
          try:
              import skyborn
              # Test if grib conversion is available
              hasattr(skyborn, 'grib2nc')
              print('✓ GRIB conversion functions available')
          except Exception as e:
              print(f'GRIB conversion not available: {e}')
          "
        continue-on-error: true

  # Code quality checks
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
          pip install -e .
          
      - name: Run flake8 (linting)
        run: |
          flake8 src/skyborn --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/skyborn --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        continue-on-error: true
        
      - name: Check import sorting
        run: |
          isort --check-only --diff src/skyborn
        continue-on-error: true
        
      - name: Check code formatting
        run: |
          black --check --diff src/skyborn
        continue-on-error: true

  # Build tests
  build-test:
    name: Test Package Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel twine
          
      - name: Build package
        run: |
          python -m build
          
      - name: Check package
        run: |
          twine check dist/*
          
      - name: Test installation from wheel
        run: |
          pip install dist/*.whl
          python -c "import skyborn; print('Package installed successfully')"
