# GitHub Actions workflow for building and deploying Sphinx documentation to GitHub Pages
# This workflow is triggered on pushes to the main branch and supports multi-language documentation
name: Deploy Documentation

on:
  push:
    branches: [ main ]  # Deploy docs when pushing to main branch
    paths:
      - 'docs/**'       # Only run when documentation files change
      - 'src/**'        # Or when source code changes (for API docs)
      - '.github/workflows/docs-deploy.yml'  # Or when this workflow changes
  workflow_dispatch:     # Allow manual triggering

# Set permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for proper version detection

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-docs.txt
          pip install -e .  # Install package in development mode for API docs

      - name: Configure git for GitHub Actions
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Build English documentation
        run: |
          cd docs
          python build_docs.py --lang en --clean

      - name: Build Chinese documentation
        run: |
          cd docs
          python build_docs.py --lang zh_CN --clean

      - name: Prepare GitHub Pages structure
        run: |
          # Create the root directory for GitHub Pages
          mkdir -p _site

          # Copy English docs to root (default language)
          cp -r docs/build/en/html/* _site/

          # Copy Chinese docs to zh_CN subdirectory
          mkdir -p _site/zh_CN
          cp -r docs/build/zh_CN/html/* _site/zh_CN/

          # Create a simple language selector index page
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="UTF-8">
              <title>Skyborn Documentation</title>
              <meta http-equiv="refresh" content="0; url=./en/">
              <style>
                  body { font-family: Arial, sans-serif; text-align: center; margin-top: 50px; }
                  .language-selector { margin: 20px; }
                  .language-selector a {
                      display: inline-block;
                      margin: 10px;
                      padding: 15px 30px;
                      background-color: #007acc;
                      color: white;
                      text-decoration: none;
                      border-radius: 5px;
                  }
                  .language-selector a:hover { background-color: #005999; }
              </style>
          </head>
          <body>
              <h1>Skyborn Documentation</h1>
              <div class="language-selector">
                  <a href="./en/">English Documentation</a>
                  <a href="./zh_CN/">‰∏≠ÊñáÊñáÊ°£</a>
              </div>
              <p>Redirecting to English documentation...</p>
          </body>
          </html>
          EOF

          # Copy English docs to en subdirectory for explicit access
          mkdir -p _site/en
          cp -r docs/build/en/html/* _site/en/

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment deployment status
        if: github.event_name == 'push'
        run: |
          echo "üìö Documentation deployed successfully!"
          echo "üåê English: ${{ steps.deployment.outputs.page_url }}en/"
          echo "üåê ‰∏≠Êñá: ${{ steps.deployment.outputs.page_url }}zh_CN/"
