!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _spherepack ! in
    interface  ! in :_spherepack
        subroutine alfk(n,m,cp) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\alf.f
            integer, optional,check(shape(cp, 0) == 1 + n / 2),depend(cp) :: n=(-2 + 2 * shape(cp, 0)) / 1
            integer :: m
            real dimension(1 + n / 2) :: cp
        end subroutine alfk
        subroutine lfim(init,theta,l,n,nm,pb,id,wlfim) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\alf.f
            integer :: init
            real dimension(l) :: theta
            integer, optional,check(shape(theta, 0) == l),depend(theta) :: l=shape(theta, 0)
            integer :: n
            integer :: nm
            real dimension(1) :: pb
            integer :: id
            real dimension(1) :: wlfim
        end subroutine lfim
        subroutine lfim1(init,theta,l,n,nm,id,p3,phz,ph1,p1,p2,cp) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\alf.f
            integer :: init
            real dimension(l) :: theta
            integer, optional,check(shape(theta, 0) == l),depend(theta) :: l=shape(theta, 0)
            integer :: n
            integer :: nm
            integer, optional,check(shape(p3, 0) == id),depend(p3) :: id=shape(p3, 0)
            real dimension(id,1) :: p3
            real dimension(l,1),depend(l) :: phz
            real dimension(l,1),depend(l) :: ph1
            real dimension(l,1),depend(l) :: p1
            real dimension(l,1),depend(l) :: p2
            real dimension(1) :: cp
        end subroutine lfim1
        subroutine lfin(init,theta,l,m,nm,pb,id,wlfin) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\alf.f
            integer :: init
            real dimension(l) :: theta
            integer, optional,check(shape(theta, 0) == l),depend(theta) :: l=shape(theta, 0)
            integer :: m
            integer :: nm
            real dimension(1) :: pb
            integer :: id
            real dimension(1) :: wlfin
        end subroutine lfin
        subroutine lfin1(init,theta,l,m,nm,id,p3,phz,ph1,p1,p2,cp) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\alf.f
            integer :: init
            real dimension(l) :: theta
            integer, optional,check(shape(theta, 0) == l),depend(theta) :: l=shape(theta, 0)
            integer :: m
            integer :: nm
            integer, optional,check(shape(p3, 0) == id),depend(p3) :: id=shape(p3, 0)
            real dimension(id,1) :: p3
            real dimension(l,1),depend(l) :: phz
            real dimension(l,1),depend(l) :: ph1
            real dimension(l,1),depend(l) :: p1
            real dimension(l,1),depend(l) :: p2
            real dimension(1) :: cp
        end subroutine lfin1
        subroutine lfpt(n,m,theta,cp,pb) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\alf.f
            integer :: n
            integer :: m
            real :: theta
            real dimension(1) :: cp
            real :: pb
        end subroutine lfpt
        subroutine gaqd(nlat,theta,wts,w,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\gaqd.f
            integer, optional,check(shape(theta, 0) == nlat),depend(theta) :: nlat=shape(theta, 0)
            double precision dimension(nlat) :: theta
            double precision dimension(nlat),depend(nlat) :: wts
            double precision :: w
            integer :: lwork
            integer :: ierror
        end subroutine gaqd
        subroutine cpdp(n,cz,cp,dcp) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\gaqd.f
            integer, optional,check(shape(cp, 0) == 1 + n / 2),depend(cp) :: n=(-2 + 2 * shape(cp, 0)) / 1
            double precision :: cz
            double precision dimension(1 + n / 2) :: cp
            double precision dimension(1 + n / 2),depend(n) :: dcp
        end subroutine cpdp
        subroutine tpdp(n,theta,cz,cp,dcp,pb,dpb) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\gaqd.f
            integer, optional,check(shape(cp, 0) == 1 + n / 2),depend(cp) :: n=(-2 + 2 * shape(cp, 0)) / 1
            double precision :: theta
            double precision :: cz
            double precision dimension(1 + n / 2) :: cp
            double precision dimension(1 + n / 2),depend(n) :: dcp
            double precision :: pb
            double precision :: dpb
        end subroutine tpdp
        function dzeps(x) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\gaqd.f
            double precision :: x
            real :: dzeps
        end function dzeps
        subroutine getlegfunc(legfunc,lat,ntrunc) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\getlegfunc.f
            real dimension((2 + 3 * ntrunc + ntrunc * ntrunc) / 2),check(shape(legfunc, 0) == (2 + 3 * ntrunc + ntrunc * ntrunc) / 2),depend(ntrunc) :: legfunc
            real :: lat
            integer, required,intent(in) :: ntrunc
        end subroutine getlegfunc
        subroutine hrffti(n,wsave) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer, optional,check(shape(wsave, 0) == 15 + n),depend(wsave) :: n=-15 + shape(wsave, 0)
            real dimension(15 + n) :: wsave
            real :: tfft
            common /hrf/ tfft
        end subroutine hrffti
        subroutine hrfti1(n,wa,fac) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer, optional,check(shape(wa, 0) == n),depend(wa) :: n=shape(wa, 0)
            real dimension(n) :: wa
            real dimension(15) :: fac
        end subroutine hrfti1
        subroutine hrfftf(m,n,r,mdimr,whrfft,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: m
            integer, optional,check(shape(r, 1) == n),depend(r) :: n=shape(r, 1)
            real dimension(mdimr,n) :: r
            integer, optional,check(shape(r, 0) == mdimr),depend(r) :: mdimr=shape(r, 0)
            real dimension(15 + n),depend(n) :: whrfft
            real dimension(1) :: work
            real :: tfft
            common /hrf/ tfft
        end subroutine hrfftf
        subroutine hrftf1(m,n,c,mdimc,ch,wa,fac) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer, optional,check(shape(ch, 0) == m),depend(ch) :: m=shape(ch, 0)
            integer, optional,check(shape(c, 1) == n),depend(c) :: n=shape(c, 1)
            real dimension(mdimc,n) :: c
            integer, optional,check(shape(c, 0) == mdimc),depend(c) :: mdimc=shape(c, 0)
            real dimension(m,n),depend(n) :: ch
            real dimension(n),depend(n) :: wa
            real dimension(15) :: fac
        end subroutine hrftf1
        subroutine hradf4(mp,ido,l1,cc,mdimcc,ch,mdimch,wa1,wa2,wa3) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 2) == l1),depend(cc) :: l1=shape(cc, 2)
            real dimension(mdimcc,ido,l1,4) :: cc
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,4,l1),depend(l1,ido) :: ch
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa1
            real dimension(ido),depend(ido) :: wa2
            real dimension(ido),depend(ido) :: wa3
        end subroutine hradf4
        subroutine hradf2(mp,ido,l1,cc,mdimcc,ch,mdimch,wa1) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 2) == l1),depend(cc) :: l1=shape(cc, 2)
            real dimension(mdimcc,ido,l1,2) :: cc
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,2,l1),depend(l1,ido) :: ch
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa1
        end subroutine hradf2
        subroutine hradf3(mp,ido,l1,cc,mdimcc,ch,mdimch,wa1,wa2) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 2) == l1),depend(cc) :: l1=shape(cc, 2)
            real dimension(mdimcc,ido,l1,3) :: cc
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,3,l1),depend(l1,ido) :: ch
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa1
            real dimension(ido),depend(ido) :: wa2
        end subroutine hradf3
        subroutine hradf5(mp,ido,l1,cc,mdimcc,ch,mdimch,wa1,wa2,wa3,wa4) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 2) == l1),depend(cc) :: l1=shape(cc, 2)
            real dimension(mdimcc,ido,l1,5) :: cc
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,5,l1),depend(l1,ido) :: ch
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa1
            real dimension(ido),depend(ido) :: wa2
            real dimension(ido),depend(ido) :: wa3
            real dimension(ido),depend(ido) :: wa4
        end subroutine hradf5
        subroutine hradfg(mp,ido,ip,l1,idl1,cc,c1,c2,mdimcc,ch,ch2,mdimch,wa) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 2) == ip),depend(cc) :: ip=shape(cc, 2)
            integer, optional,check(shape(cc, 3) == l1),depend(cc) :: l1=shape(cc, 3)
            integer, optional,check(shape(c2, 1) == idl1),depend(c2) :: idl1=shape(c2, 1)
            real dimension(mdimcc,ido,ip,l1) :: cc
            real dimension(mdimcc,ido,l1,ip),depend(l1,mdimcc,ido,ip) :: c1
            real dimension(mdimcc,idl1,ip),depend(mdimcc,ip) :: c2
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,l1,ip),depend(l1,ip,ido) :: ch
            real dimension(mdimch,idl1,ip),depend(idl1,ip,mdimch) :: ch2
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa
        end subroutine hradfg
        function pimach() ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            real :: pimach
        end function pimach
        subroutine hrfftb(m,n,r,mdimr,whrfft,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: m
            integer, optional,check(shape(r, 1) == n),depend(r) :: n=shape(r, 1)
            real dimension(mdimr,n) :: r
            integer, optional,check(shape(r, 0) == mdimr),depend(r) :: mdimr=shape(r, 0)
            real dimension(15 + n),depend(n) :: whrfft
            real dimension(1) :: work
            real :: tfft
            common /hrf/ tfft
        end subroutine hrfftb
        subroutine hrftb1(m,n,c,mdimc,ch,wa,fac) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer, optional,check(shape(ch, 0) == m),depend(ch) :: m=shape(ch, 0)
            integer, optional,check(shape(c, 1) == n),depend(c) :: n=shape(c, 1)
            real dimension(mdimc,n) :: c
            integer, optional,check(shape(c, 0) == mdimc),depend(c) :: mdimc=shape(c, 0)
            real dimension(m,n),depend(n) :: ch
            real dimension(n),depend(n) :: wa
            real dimension(15) :: fac
        end subroutine hrftb1
        subroutine hradbg(mp,ido,ip,l1,idl1,cc,c1,c2,mdimcc,ch,ch2,mdimch,wa) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 2) == ip),depend(cc) :: ip=shape(cc, 2)
            integer, optional,check(shape(cc, 3) == l1),depend(cc) :: l1=shape(cc, 3)
            integer, optional,check(shape(c2, 1) == idl1),depend(c2) :: idl1=shape(c2, 1)
            real dimension(mdimcc,ido,ip,l1) :: cc
            real dimension(mdimcc,ido,l1,ip),depend(l1,mdimcc,ido,ip) :: c1
            real dimension(mdimcc,idl1,ip),depend(mdimcc,ip) :: c2
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,l1,ip),depend(l1,ip,ido) :: ch
            real dimension(mdimch,idl1,ip),depend(idl1,ip,mdimch) :: ch2
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa
        end subroutine hradbg
        subroutine hradb4(mp,ido,l1,cc,mdimcc,ch,mdimch,wa1,wa2,wa3) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 3) == l1),depend(cc) :: l1=shape(cc, 3)
            real dimension(mdimcc,ido,4,l1) :: cc
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,l1,4),depend(l1,ido) :: ch
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa1
            real dimension(ido),depend(ido) :: wa2
            real dimension(ido),depend(ido) :: wa3
        end subroutine hradb4
        subroutine hradb2(mp,ido,l1,cc,mdimcc,ch,mdimch,wa1) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 3) == l1),depend(cc) :: l1=shape(cc, 3)
            real dimension(mdimcc,ido,2,l1) :: cc
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,l1,2),depend(l1,ido) :: ch
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa1
        end subroutine hradb2
        subroutine hradb3(mp,ido,l1,cc,mdimcc,ch,mdimch,wa1,wa2) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 3) == l1),depend(cc) :: l1=shape(cc, 3)
            real dimension(mdimcc,ido,3,l1) :: cc
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,l1,3),depend(l1,ido) :: ch
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa1
            real dimension(ido),depend(ido) :: wa2
        end subroutine hradb3
        subroutine hradb5(mp,ido,l1,cc,mdimcc,ch,mdimch,wa1,wa2,wa3,wa4) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\hrfft.f
            integer :: mp
            integer, optional,check(shape(cc, 1) == ido),depend(cc) :: ido=shape(cc, 1)
            integer, optional,check(shape(cc, 3) == l1),depend(cc) :: l1=shape(cc, 3)
            real dimension(mdimcc,ido,5,l1) :: cc
            integer, optional,check(shape(cc, 0) == mdimcc),depend(cc) :: mdimcc=shape(cc, 0)
            real dimension(mdimch,ido,l1,5),depend(l1,ido) :: ch
            integer, optional,check(shape(ch, 0) == mdimch),depend(ch) :: mdimch=shape(ch, 0)
            real dimension(ido),depend(ido) :: wa1
            real dimension(ido),depend(ido) :: wa2
            real dimension(ido),depend(ido) :: wa3
            real dimension(ido),depend(ido) :: wa4
        end subroutine hradb5
        subroutine ihgeod(m,idp,jdp,x,y,z) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\ihgeod.f
            integer :: m
            integer, optional,check(shape(x, 0) == idp),depend(x) :: idp=shape(x, 0)
            integer, optional,check(shape(x, 1) == jdp),depend(x) :: jdp=shape(x, 1)
            real dimension(idp,jdp,5) :: x
            real dimension(idp,jdp,5),depend(jdp,idp) :: y
            real dimension(idp,jdp,5),depend(jdp,idp) :: z
        end subroutine ihgeod
        subroutine ctos(x,y,z,r,theta,phi) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\ihgeod.f
            real :: x
            real :: y
            real :: z
            real :: r
            real :: theta
            real :: phi
        end subroutine ctos
        subroutine stoc(r,theta,phi,x,y,z) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\ihgeod.f
            real :: r
            real :: theta
            real :: phi
            real :: x
            real :: y
            real :: z
        end subroutine stoc
        subroutine invlap(dataspec,dataspec_ilap,nmdim,nt,rsphere) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\invlap.f
            complex dimension(nmdim,nt) :: dataspec
            complex dimension(nmdim,nt),depend(nmdim,nt) :: dataspec_ilap
            integer, optional,check(shape(dataspec, 0) == nmdim),depend(dataspec) :: nmdim=shape(dataspec, 0)
            integer, optional,check(shape(dataspec, 1) == nt),depend(dataspec) :: nt=shape(dataspec, 1)
            real :: rsphere
        end subroutine invlap
        subroutine lap(dataspec,dataspec_lap,nmdim,nt,rsphere) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\lap.f
            complex dimension(nmdim,nt) :: dataspec
            complex dimension(nmdim,nt),depend(nmdim,nt) :: dataspec_lap
            integer, optional,check(shape(dataspec, 0) == nmdim),depend(dataspec) :: nmdim=shape(dataspec, 0)
            integer, optional,check(shape(dataspec, 1) == nt),depend(dataspec) :: nt=shape(dataspec, 1)
            real :: rsphere
        end subroutine lap
        subroutine multsmoothfact(dataspec,dataspec_smooth,smooth,nlat,nmdim,nt) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\multsmoothfact.f
            complex dimension(nmdim,nt) :: dataspec
            complex dimension(nmdim,nt),depend(nmdim,nt) :: dataspec_smooth
            real dimension(nlat) :: smooth
            integer, optional,check(shape(smooth, 0) == nlat),depend(smooth) :: nlat=shape(smooth, 0)
            integer, optional,check(shape(dataspec, 0) == nmdim),depend(dataspec) :: nmdim=shape(dataspec, 0)
            integer, optional,check(shape(dataspec, 1) == nt),depend(dataspec) :: nt=shape(dataspec, 1)
        end subroutine multsmoothfact
        subroutine onedtotwod(dataspec,a,b,nlat,nmdim,nt) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\onedtotwod.f
            complex dimension(nmdim,nt) :: dataspec
            real dimension(nlat,nlat,nt),depend(nt) :: a
            real dimension(nlat,nlat,nt),depend(nlat,nt) :: b
            integer, optional,check(shape(a, 0) == nlat),depend(a) :: nlat=shape(a, 0)
            integer, optional,check(shape(dataspec, 0) == nmdim),depend(dataspec) :: nmdim=shape(dataspec, 0)
            integer, optional,check(shape(dataspec, 1) == nt),depend(dataspec) :: nt=shape(dataspec, 1)
        end subroutine onedtotwod
        subroutine onedtotwod_vrtdiv(vrtspec,divspec,br,bi,cr,ci,nlat,nmdim,nt,rsphere) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\onedtotwod_vrtdiv.f
            complex dimension(nmdim,nt) :: vrtspec
            complex dimension(nmdim,nt),depend(nmdim,nt) :: divspec
            real dimension(nlat,nlat,nt),depend(nt) :: br
            real dimension(nlat,nlat,nt),depend(nlat,nt) :: bi
            real dimension(nlat,nlat,nt),depend(nlat,nt) :: cr
            real dimension(nlat,nlat,nt),depend(nlat,nt) :: ci
            integer, optional,check(shape(br, 0) == nlat),depend(br) :: nlat=shape(br, 0)
            integer, optional,check(shape(vrtspec, 0) == nmdim),depend(vrtspec) :: nmdim=shape(vrtspec, 0)
            integer, optional,check(shape(vrtspec, 1) == nt),depend(vrtspec) :: nt=shape(vrtspec, 1)
            real :: rsphere
        end subroutine onedtotwod_vrtdiv
        subroutine shaec(nlat,nlon,isym,nt,g,idg,jdg,a,b,mdab,ndab,wshaec,lshaec,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shaec.f
            integer :: nlat
            integer :: nlon
            integer :: isym
            integer :: nt
            real dimension(idg,jdg,*) :: g
            integer, optional,check(shape(g, 0) == idg),depend(g) :: idg=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdg),depend(g) :: jdg=shape(g, 1)
            real dimension(mdab,ndab,*) :: a
            real dimension(mdab,ndab,*),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(*) :: wshaec
            integer :: lshaec
            real dimension(*) :: work
            integer :: lwork
            integer :: ierror
        end subroutine shaec
        subroutine shaec1(nlat,isym,nt,g,idgs,jdgs,a,b,mdab,ndab,imid,idg,jdg,ge,go,work,zb,wzfin,whrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shaec.f
            integer, optional,check(shape(zb, 1) == nlat),depend(zb) :: nlat=shape(zb, 1)
            integer :: isym
            integer :: nt
            real dimension(idgs,jdgs,1) :: g
            integer, optional,check(shape(g, 0) == idgs),depend(g) :: idgs=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdgs),depend(g) :: jdgs=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            integer, optional,check(shape(zb, 0) == imid),depend(zb) :: imid=shape(zb, 0)
            integer, optional,check(shape(ge, 0) == idg),depend(ge) :: idg=shape(ge, 0)
            integer, optional,check(shape(ge, 1) == jdg),depend(ge) :: jdg=shape(ge, 1)
            real dimension(idg,jdg,1) :: ge
            real dimension(idg,jdg,1),depend(idg,jdg) :: go
            real dimension(1) :: work
            real dimension(imid,nlat,3) :: zb
            real dimension(1) :: wzfin
            real dimension(1) :: whrfft
        end subroutine shaec1
        subroutine shaeci(nlat,nlon,wshaec,lshaec,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shaec.f
            integer :: nlat
            integer :: nlon
            real dimension(lshaec) :: wshaec
            integer, optional,check(shape(wshaec, 0) == lshaec),depend(wshaec) :: lshaec=shape(wshaec, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine shaeci
        subroutine shaes(nlat,nlon,isym,nt,g,idg,jdg,a,b,mdab,ndab,wshaes,lshaes,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shaes.f
            integer :: nlat
            integer :: nlon
            integer :: isym
            integer :: nt
            real dimension(idg,jdg,1) :: g
            integer, optional,check(shape(g, 0) == idg),depend(g) :: idg=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdg),depend(g) :: jdg=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(lshaes) :: wshaes
            integer :: lshaes
            real dimension(lwork) :: work
            integer :: lwork
            integer :: ierror
        end subroutine shaes
        subroutine shaes1(nlat,isym,nt,g,idgs,jdgs,a,b,mdab,ndab,z,idz,idg,jdg,ge,go,work,whrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shaes.f
            integer :: nlat
            integer :: isym
            integer :: nt
            real dimension(idgs,jdgs,1) :: g
            integer, optional,check(shape(g, 0) == idgs),depend(g) :: idgs=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdgs),depend(g) :: jdgs=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(idz,1) :: z
            integer, optional,check(shape(z, 0) == idz),depend(z) :: idz=shape(z, 0)
            integer, optional,check(shape(ge, 0) == idg),depend(ge) :: idg=shape(ge, 0)
            integer, optional,check(shape(ge, 1) == jdg),depend(ge) :: jdg=shape(ge, 1)
            real dimension(idg,jdg,1) :: ge
            real dimension(idg,jdg,1),depend(idg,jdg) :: go
            real dimension(1) :: work
            real dimension(1) :: whrfft
        end subroutine shaes1
        subroutine shaesi(nlat,nlon,wshaes,lshaes,work,lwork,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shaes.f
            integer :: nlat
            integer :: nlon
            real dimension(*) :: wshaes
            integer :: lshaes
            real dimension(*) :: work
            integer :: lwork
            double precision dimension(*) :: dwork
            integer :: ldwork
            integer :: ierror
        end subroutine shaesi
        subroutine shagc(nlat,nlon,isym,nt,g,idg,jdg,a,b,mdab,ndab,wshagc,lshagc,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shagc.f
            integer :: nlat
            integer :: nlon
            integer :: isym
            integer :: nt
            real dimension(idg,jdg,1) :: g
            integer, optional,check(shape(g, 0) == idg),depend(g) :: idg=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdg),depend(g) :: jdg=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(lshagc) :: wshagc
            integer, optional,check(shape(wshagc, 0) == lshagc),depend(wshagc) :: lshagc=shape(wshagc, 0)
            real dimension(lwork) :: work
            integer, optional,check(shape(work, 0) == lwork),depend(work) :: lwork=shape(work, 0)
            integer :: ierror
        end subroutine shagc
        subroutine shagc1(nlat,nlon,l,lat,mode,gs,idg,jdg,nt,a,b,mdab,ndab,w,wts,wfft,late,pmn,g) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shagc.f
            integer, optional,check(shape(wts, 0) == nlat),depend(wts) :: nlat=shape(wts, 0)
            integer, optional,check(shape(g, 1) == nlon),depend(g) :: nlon=shape(g, 1)
            integer :: l
            integer, optional,check(shape(g, 0) == lat),depend(g) :: lat=shape(g, 0)
            integer :: mode
            real dimension(idg,jdg,nt) :: gs
            integer, optional,check(shape(gs, 0) == idg),depend(gs) :: idg=shape(gs, 0)
            integer, optional,check(shape(gs, 1) == jdg),depend(gs) :: jdg=shape(gs, 1)
            integer, optional,check(shape(gs, 2) == nt),depend(gs) :: nt=shape(gs, 2)
            real dimension(mdab,ndab,nt),depend(nt) :: a
            real dimension(mdab,ndab,nt),depend(ndab,mdab,nt) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(1) :: w
            real dimension(nlat) :: wts
            real dimension(1) :: wfft
            integer, optional,check(shape(pmn, 1) == late),depend(pmn) :: late=shape(pmn, 1)
            real dimension(nlat,late,3),depend(nlat) :: pmn
            real dimension(lat,nlon,nt),depend(nt) :: g
        end subroutine shagc1
        subroutine shagci(nlat,nlon,wshagc,lshagc,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shagc.f
            integer :: nlat
            integer :: nlon
            real dimension(lshagc) :: wshagc
            integer, optional,check(shape(wshagc, 0) == lshagc),depend(wshagc) :: lshagc=shape(wshagc, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine shagci
        subroutine shagci1(nlat,nlon,l,late,wts,p0n,p1n,abel,bbel,cbel,wfft,dtheta,dwts,work,ier) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shagc.f
            integer, optional,check(shape(wts, 0) == nlat),depend(wts) :: nlat=shape(wts, 0)
            integer :: nlon
            integer :: l
            integer, optional,check(shape(p0n, 1) == late),depend(p0n) :: late=shape(p0n, 1)
            real dimension(nlat) :: wts
            real dimension(nlat,late),depend(nlat) :: p0n
            real dimension(nlat,late),depend(late,nlat) :: p1n
            real dimension(1) :: abel
            real dimension(1) :: bbel
            real dimension(1) :: cbel
            real dimension(1) :: wfft
            double precision dimension(nlat),depend(nlat) :: dtheta
            double precision dimension(nlat),depend(nlat) :: dwts
            double precision dimension(*) :: work
            integer :: ier
        end subroutine shagci1
        subroutine shags(nlat,nlon,mode,nt,g,idg,jdg,a,b,mdab,ndab,wshags,lshags,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shags.f
            integer :: nlat
            integer :: nlon
            integer :: mode
            integer :: nt
            real dimension(idg,jdg,1) :: g
            integer, optional,check(shape(g, 0) == idg),depend(g) :: idg=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdg),depend(g) :: jdg=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(lshags) :: wshags
            integer, optional,check(shape(wshags, 0) == lshags),depend(wshags) :: lshags=shape(wshags, 0)
            real dimension(lwork) :: work
            integer, optional,check(shape(work, 0) == lwork),depend(work) :: lwork=shape(work, 0)
            integer :: ierror
        end subroutine shags
        subroutine shags1(nlat,nlon,l,lat,mode,gs,idg,jdg,nt,a,b,mdab,ndab,wts,wfft,pmn,late,g,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shags.f
            integer, optional,check(shape(wts, 0) == nlat),depend(wts) :: nlat=shape(wts, 0)
            integer, optional,check(shape(g, 1) == nlon),depend(g) :: nlon=shape(g, 1)
            integer :: l
            integer, optional,check(shape(g, 0) == lat),depend(g) :: lat=shape(g, 0)
            integer :: mode
            real dimension(idg,jdg,nt) :: gs
            integer, optional,check(shape(gs, 0) == idg),depend(gs) :: idg=shape(gs, 0)
            integer, optional,check(shape(gs, 1) == jdg),depend(gs) :: jdg=shape(gs, 1)
            integer, optional,check(shape(gs, 2) == nt),depend(gs) :: nt=shape(gs, 2)
            real dimension(mdab,ndab,nt),depend(nt) :: a
            real dimension(mdab,ndab,nt),depend(ndab,mdab,nt) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(nlat) :: wts
            real dimension(1) :: wfft
            real dimension(late,1) :: pmn
            integer, optional,check(shape(pmn, 0) == late),depend(pmn) :: late=shape(pmn, 0)
            real dimension(lat,nlon,nt),depend(nt) :: g
            real dimension(1) :: work
        end subroutine shags1
        subroutine shagsi(nlat,nlon,wshags,lshags,work,lwork,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shags.f
            integer :: nlat
            integer :: nlon
            real dimension(lshags) :: wshags
            integer, optional,check(shape(wshags, 0) == lshags),depend(wshags) :: lshags=shape(wshags, 0)
            real dimension(lwork) :: work
            integer, optional,check(shape(work, 0) == lwork),depend(work) :: lwork=shape(work, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine shagsi
        subroutine shagss1(nlat,l,late,w,pmn,pmnf) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shags.f
            integer, optional,check(shape(pmn, 0) == nlat),depend(pmn) :: nlat=shape(pmn, 0)
            integer :: l
            integer, optional,check(shape(pmn, 1) == late),depend(pmn) :: late=shape(pmn, 1)
            real dimension(1) :: w
            real dimension(nlat,late,3) :: pmn
            real dimension(late,1),depend(late) :: pmnf
        end subroutine shagss1
        subroutine shagsp(nlat,nlon,wshags,lshags,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shags.f
            integer :: nlat
            integer :: nlon
            real dimension(lshags) :: wshags
            integer, optional,check(shape(wshags, 0) == lshags),depend(wshags) :: lshags=shape(wshags, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine shagsp
        subroutine shagsp1(nlat,nlon,l,late,wts,p0n,p1n,abel,bbel,cbel,wfft,dtheta,dwts,work,ier) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shags.f
            integer, optional,check(shape(wts, 0) == nlat),depend(wts) :: nlat=shape(wts, 0)
            integer :: nlon
            integer :: l
            integer, optional,check(shape(p0n, 1) == late),depend(p0n) :: late=shape(p0n, 1)
            real dimension(nlat) :: wts
            real dimension(nlat,late),depend(nlat) :: p0n
            real dimension(nlat,late),depend(late,nlat) :: p1n
            real dimension(1) :: abel
            real dimension(1) :: bbel
            real dimension(1) :: cbel
            real dimension(1) :: wfft
            double precision dimension(nlat),depend(nlat) :: dtheta
            double precision dimension(nlat),depend(nlat) :: dwts
            double precision dimension(*) :: work
            integer :: ier
        end subroutine shagsp1
        subroutine shsec(nlat,nlon,isym,nt,g,idg,jdg,a,b,mdab,ndab,wshsec,lshsec,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsec.f
            integer :: nlat
            integer :: nlon
            integer :: isym
            integer :: nt
            real dimension(idg,jdg,1) :: g
            integer, optional,check(shape(g, 0) == idg),depend(g) :: idg=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdg),depend(g) :: jdg=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(lshsec) :: wshsec
            integer :: lshsec
            real dimension(lwork) :: work
            integer :: lwork
            integer :: ierror
        end subroutine shsec
        subroutine shsec1(nlat,isym,nt,g,idgs,jdgs,a,b,mdab,ndab,imid,idg,jdg,ge,go,work,pb,walin,whrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsec.f
            integer, optional,check(shape(pb, 1) == nlat),depend(pb) :: nlat=shape(pb, 1)
            integer :: isym
            integer :: nt
            real dimension(idgs,jdgs,1) :: g
            integer, optional,check(shape(g, 0) == idgs),depend(g) :: idgs=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdgs),depend(g) :: jdgs=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            integer, optional,check(shape(pb, 0) == imid),depend(pb) :: imid=shape(pb, 0)
            integer, optional,check(shape(ge, 0) == idg),depend(ge) :: idg=shape(ge, 0)
            integer, optional,check(shape(ge, 1) == jdg),depend(ge) :: jdg=shape(ge, 1)
            real dimension(idg,jdg,1) :: ge
            real dimension(idg,jdg,1),depend(idg,jdg) :: go
            real dimension(1) :: work
            real dimension(imid,nlat,3) :: pb
            real dimension(1) :: walin
            real dimension(1) :: whrfft
        end subroutine shsec1
        subroutine shseci(nlat,nlon,wshsec,lshsec,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsec.f
            integer :: nlat
            integer :: nlon
            real dimension(*) :: wshsec
            integer :: lshsec
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine shseci
        subroutine shses(nlat,nlon,isym,nt,g,idg,jdg,a,b,mdab,ndab,wshses,lshses,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shses.f
            integer :: nlat
            integer :: nlon
            integer :: isym
            integer :: nt
            real dimension(idg,jdg,1) :: g
            integer, optional,check(shape(g, 0) == idg),depend(g) :: idg=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdg),depend(g) :: jdg=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(lshses) :: wshses
            integer :: lshses
            real dimension(lwork) :: work
            integer :: lwork
            integer :: ierror
        end subroutine shses
        subroutine shses1(nlat,isym,nt,g,idgs,jdgs,a,b,mdab,ndab,p,imid,idg,jdg,ge,go,work,whrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shses.f
            integer :: nlat
            integer :: isym
            integer :: nt
            real dimension(idgs,jdgs,1) :: g
            integer, optional,check(shape(g, 0) == idgs),depend(g) :: idgs=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdgs),depend(g) :: jdgs=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(imid,1) :: p
            integer, optional,check(shape(p, 0) == imid),depend(p) :: imid=shape(p, 0)
            integer, optional,check(shape(ge, 0) == idg),depend(ge) :: idg=shape(ge, 0)
            integer, optional,check(shape(ge, 1) == jdg),depend(ge) :: jdg=shape(ge, 1)
            real dimension(idg,jdg,1) :: ge
            real dimension(idg,jdg,1),depend(idg,jdg) :: go
            real dimension(1) :: work
            real dimension(1) :: whrfft
        end subroutine shses1
        subroutine shsesi(nlat,nlon,wshses,lshses,work,lwork,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shses.f
            integer :: nlat
            integer :: nlon
            real dimension(*) :: wshses
            integer :: lshses
            real dimension(*) :: work
            integer :: lwork
            double precision dimension(*) :: dwork
            integer :: ldwork
            integer :: ierror
        end subroutine shsesi
        subroutine shsgc(nlat,nlon,mode,nt,g,idg,jdg,a,b,mdab,ndab,wshsgc,lshsgc,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgc.f
            integer :: nlat
            integer :: nlon
            integer :: mode
            integer :: nt
            real dimension(idg,jdg,1) :: g
            integer, optional,check(shape(g, 0) == idg),depend(g) :: idg=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdg),depend(g) :: jdg=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(lshsgc) :: wshsgc
            integer, optional,check(shape(wshsgc, 0) == lshsgc),depend(wshsgc) :: lshsgc=shape(wshsgc, 0)
            real dimension(lwork) :: work
            integer, optional,check(shape(work, 0) == lwork),depend(work) :: lwork=shape(work, 0)
            integer :: ierror
        end subroutine shsgc
        subroutine shsgc1(nlat,nlon,l,lat,mode,gs,idg,jdg,nt,a,b,mdab,ndab,w,wfft,late,pmn,g) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgc.f
            integer, optional,check(shape(pmn, 0) == nlat),depend(pmn) :: nlat=shape(pmn, 0)
            integer, optional,check(shape(g, 1) == nlon),depend(g) :: nlon=shape(g, 1)
            integer :: l
            integer, optional,check(shape(g, 0) == lat),depend(g) :: lat=shape(g, 0)
            integer :: mode
            real dimension(idg,jdg,nt) :: gs
            integer, optional,check(shape(gs, 0) == idg),depend(gs) :: idg=shape(gs, 0)
            integer, optional,check(shape(gs, 1) == jdg),depend(gs) :: jdg=shape(gs, 1)
            integer, optional,check(shape(gs, 2) == nt),depend(gs) :: nt=shape(gs, 2)
            real dimension(mdab,ndab,nt),depend(nt) :: a
            real dimension(mdab,ndab,nt),depend(ndab,mdab,nt) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(1) :: w
            real dimension(1) :: wfft
            integer, optional,check(shape(pmn, 1) == late),depend(pmn) :: late=shape(pmn, 1)
            real dimension(nlat,late,3) :: pmn
            real dimension(lat,nlon,nt),depend(nt) :: g
        end subroutine shsgc1
        subroutine shsgci(nlat,nlon,wshsgc,lshsgc,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgc.f
            integer :: nlat
            integer :: nlon
            real dimension(lshsgc) :: wshsgc
            integer, optional,check(shape(wshsgc, 0) == lshsgc),depend(wshsgc) :: lshsgc=shape(wshsgc, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine shsgci
        subroutine shsgci1(nlat,nlon,l,late,wts,p0n,p1n,abel,bbel,cbel,wfft,dtheta,dwts,work,ier) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgc.f
            integer, optional,check(shape(wts, 0) == nlat),depend(wts) :: nlat=shape(wts, 0)
            integer :: nlon
            integer :: l
            integer, optional,check(shape(p0n, 1) == late),depend(p0n) :: late=shape(p0n, 1)
            real dimension(nlat) :: wts
            real dimension(nlat,late),depend(nlat) :: p0n
            real dimension(nlat,late),depend(late,nlat) :: p1n
            real dimension(1) :: abel
            real dimension(1) :: bbel
            real dimension(1) :: cbel
            real dimension(1) :: wfft
            double precision dimension(nlat),depend(nlat) :: dtheta
            double precision dimension(nlat),depend(nlat) :: dwts
            double precision dimension(*) :: work
            integer :: ier
        end subroutine shsgci1
        subroutine shsgs(nlat,nlon,mode,nt,g,idg,jdg,a,b,mdab,ndab,wshsgs,lshsgs,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgs.f
            integer :: nlat
            integer :: nlon
            integer :: mode
            integer :: nt
            real dimension(idg,jdg,1) :: g
            integer, optional,check(shape(g, 0) == idg),depend(g) :: idg=shape(g, 0)
            integer, optional,check(shape(g, 1) == jdg),depend(g) :: jdg=shape(g, 1)
            real dimension(mdab,ndab,1) :: a
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(lshsgs) :: wshsgs
            integer, optional,check(shape(wshsgs, 0) == lshsgs),depend(wshsgs) :: lshsgs=shape(wshsgs, 0)
            real dimension(lwork) :: work
            integer, optional,check(shape(work, 0) == lwork),depend(work) :: lwork=shape(work, 0)
            integer :: ierror
        end subroutine shsgs
        subroutine shsgs1(nlat,nlon,l,lat,mode,gs,idg,jdg,nt,a,b,mdab,ndab,wfft,pmn,late,g,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgs.f
            integer :: nlat
            integer, optional,check(shape(g, 1) == nlon),depend(g) :: nlon=shape(g, 1)
            integer :: l
            integer, optional,check(shape(g, 0) == lat),depend(g) :: lat=shape(g, 0)
            integer :: mode
            real dimension(idg,jdg,nt) :: gs
            integer, optional,check(shape(gs, 0) == idg),depend(gs) :: idg=shape(gs, 0)
            integer, optional,check(shape(gs, 1) == jdg),depend(gs) :: jdg=shape(gs, 1)
            integer, optional,check(shape(gs, 2) == nt),depend(gs) :: nt=shape(gs, 2)
            real dimension(mdab,ndab,nt),depend(nt) :: a
            real dimension(mdab,ndab,nt),depend(ndab,mdab,nt) :: b
            integer, optional,check(shape(a, 0) == mdab),depend(a) :: mdab=shape(a, 0)
            integer, optional,check(shape(a, 1) == ndab),depend(a) :: ndab=shape(a, 1)
            real dimension(1) :: wfft
            real dimension(late,1) :: pmn
            integer, optional,check(shape(pmn, 0) == late),depend(pmn) :: late=shape(pmn, 0)
            real dimension(lat,nlon,nt),depend(nt) :: g
            real dimension(1) :: work
        end subroutine shsgs1
        subroutine shsgsi(nlat,nlon,wshsgs,lshsgs,work,lwork,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgs.f
            integer :: nlat
            integer :: nlon
            real dimension(lshsgs) :: wshsgs
            integer, optional,check(shape(wshsgs, 0) == lshsgs),depend(wshsgs) :: lshsgs=shape(wshsgs, 0)
            real dimension(lwork) :: work
            integer, optional,check(shape(work, 0) == lwork),depend(work) :: lwork=shape(work, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine shsgsi
        subroutine shsgss1(nlat,l,late,w,pmn,pmnf) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgs.f
            integer, optional,check(shape(pmn, 0) == nlat),depend(pmn) :: nlat=shape(pmn, 0)
            integer :: l
            integer, optional,check(shape(pmn, 1) == late),depend(pmn) :: late=shape(pmn, 1)
            real dimension(1) :: w
            real dimension(nlat,late,3) :: pmn
            real dimension(late,1),depend(late) :: pmnf
        end subroutine shsgss1
        subroutine shsgsp(nlat,nlon,wshsgs,lshsgs,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgs.f
            integer :: nlat
            integer :: nlon
            real dimension(lshsgs) :: wshsgs
            integer, optional,check(shape(wshsgs, 0) == lshsgs),depend(wshsgs) :: lshsgs=shape(wshsgs, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine shsgsp
        subroutine shsgsp1(nlat,nlon,l,late,wts,p0n,p1n,abel,bbel,cbel,wfft,dtheta,dwts,work,ier) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\shsgs.f
            integer, optional,check(shape(wts, 0) == nlat),depend(wts) :: nlat=shape(wts, 0)
            integer :: nlon
            integer :: l
            integer, optional,check(shape(p0n, 1) == late),depend(p0n) :: late=shape(p0n, 1)
            real dimension(nlat) :: wts
            real dimension(nlat,late),depend(nlat) :: p0n
            real dimension(nlat,late),depend(late,nlat) :: p1n
            real dimension(1) :: abel
            real dimension(1) :: bbel
            real dimension(1) :: cbel
            real dimension(1) :: wfft
            double precision dimension(nlat),depend(nlat) :: dtheta
            double precision dimension(nlat),depend(nlat) :: dwts
            double precision dimension(*) :: work
            integer :: ier
        end subroutine shsgsp1
        subroutine specintrp(rlon,ntrunc,datnm,scrm,pnm,ob) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\specintrp.f
            real :: rlon
            integer, required,intent(in),check(shape(scrm, 0) == 1 + ntrunc),depend(scrm) :: ntrunc=-1 + shape(scrm, 0)
            complex dimension((2 + 3 * ntrunc + ntrunc * ntrunc) / 2),check(shape(datnm, 0) == (2 + 3 * ntrunc + ntrunc * ntrunc) / 2),depend(ntrunc) :: datnm
            complex dimension(1 + ntrunc) :: scrm
            real dimension((2 + 3 * ntrunc + ntrunc * ntrunc) / 2),depend(ntrunc) :: pnm
            real :: ob
        end subroutine specintrp
        subroutine dnlfk(m,n,cp) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision dimension(1) :: cp
        end subroutine dnlfk
        subroutine dnlft(m,n,theta,cp,pb) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision :: theta
            double precision dimension(*) :: cp
            double precision :: pb
        end subroutine dnlft
        subroutine dnlftd(m,n,theta,cp,pb) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision :: theta
            double precision dimension(1) :: cp
            double precision :: pb
        end subroutine dnlftd
        subroutine legin(mode,l,nlat,m,w,pmn,km) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: mode
            integer :: l
            integer :: nlat
            integer :: m
            real dimension(1) :: w
            real dimension(1) :: pmn
            integer :: km
        end subroutine legin
        subroutine legin1(mode,l,nlat,late,m,p0n,p1n,abel,bbel,cbel,pmn,km) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: mode
            integer :: l
            integer, optional,check(shape(p0n, 0) == nlat),depend(p0n) :: nlat=shape(p0n, 0)
            integer, optional,check(shape(p0n, 1) == late),depend(p0n) :: late=shape(p0n, 1)
            integer :: m
            real dimension(nlat,late) :: p0n
            real dimension(nlat,late),depend(late,nlat) :: p1n
            real dimension(1) :: abel
            real dimension(1) :: bbel
            real dimension(1) :: cbel
            real dimension(nlat,late,3),depend(late,nlat) :: pmn
            integer :: km
        end subroutine legin1
        subroutine zfin(isym,nlat,nlon,m,z,i3,wzfin) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: isym
            integer :: nlat
            integer :: nlon
            integer :: m
            real dimension(1) :: z
            integer :: i3
            real dimension(1) :: wzfin
        end subroutine zfin
        subroutine zfin1(isym,nlat,m,z,imid,i3,zz,z1,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: isym
            integer, optional,check(shape(z, 1) == nlat),depend(z) :: nlat=shape(z, 1)
            integer :: m
            real dimension(imid,nlat,3) :: z
            integer, optional,check(shape(z, 0) == imid),depend(z) :: imid=shape(z, 0)
            integer :: i3
            real dimension(imid,1),depend(imid) :: zz
            real dimension(imid,1),depend(imid) :: z1
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine zfin1
        subroutine zfinit(nlat,nlon,wzfin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(*) :: wzfin
            double precision dimension(*) :: dwork
        end subroutine zfinit
        subroutine zfini1(nlat,nlon,imid,z,abc,cz,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(z, 1) == nlat),depend(z) :: nlat=shape(z, 1)
            integer :: nlon
            integer, optional,check(shape(z, 0) == imid),depend(z) :: imid=shape(z, 0)
            real dimension(imid,nlat,2) :: z
            real dimension(1) :: abc
            double precision dimension(*) :: cz
            double precision dimension(*) :: work
        end subroutine zfini1
        subroutine dnzfk(nlat,m,n,cz,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: m
            integer :: n
            double precision dimension(1) :: cz
            double precision dimension(1) :: work
        end subroutine dnzfk
        subroutine dnzft(nlat,m,n,th,cz,zh) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: m
            integer :: n
            double precision :: th
            double precision dimension(1) :: cz
            double precision :: zh
        end subroutine dnzft
        subroutine alin(isym,nlat,nlon,m,p,i3,walin) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: isym
            integer :: nlat
            integer :: nlon
            integer :: m
            real dimension(1) :: p
            integer :: i3
            real dimension(1) :: walin
        end subroutine alin
        subroutine alin1(isym,nlat,m,p,imid,i3,pz,p1,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: isym
            integer, optional,check(shape(p, 1) == nlat),depend(p) :: nlat=shape(p, 1)
            integer :: m
            real dimension(imid,nlat,3) :: p
            integer, optional,check(shape(p, 0) == imid),depend(p) :: imid=shape(p, 0)
            integer :: i3
            real dimension(imid,1),depend(imid) :: pz
            real dimension(imid,1),depend(imid) :: p1
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine alin1
        subroutine alinit(nlat,nlon,walin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(*) :: walin
            double precision dimension(*) :: dwork
        end subroutine alinit
        subroutine alini1(nlat,nlon,imid,p,abc,cp) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(p, 1) == nlat),depend(p) :: nlat=shape(p, 1)
            integer :: nlon
            integer, optional,check(shape(p, 0) == imid),depend(p) :: imid=shape(p, 0)
            real dimension(imid,nlat,2) :: p
            real dimension(1) :: abc
            double precision dimension(1) :: cp
        end subroutine alini1
        subroutine rabcp(nlat,nlon,abc) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: abc
        end subroutine rabcp
        subroutine rabcp1(nlat,nlon,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine rabcp1
        subroutine sea1(nlat,nlon,imid,z,idz,zin,wzfin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(zin, 1) == nlat),depend(zin) :: nlat=shape(zin, 1)
            integer :: nlon
            integer, optional,check(shape(zin, 0) == imid),depend(zin) :: imid=shape(zin, 0)
            real dimension(idz,*) :: z
            integer, optional,check(shape(z, 0) == idz),depend(z) :: idz=shape(z, 0)
            real dimension(imid,nlat,3) :: zin
            real dimension(*) :: wzfin
            double precision dimension(*) :: dwork
        end subroutine sea1
        subroutine ses1(nlat,nlon,imid,p,pin,walin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(pin, 1) == nlat),depend(pin) :: nlat=shape(pin, 1)
            integer :: nlon
            integer, optional,check(shape(p, 0) == imid),depend(p) :: imid=shape(p, 0)
            real dimension(imid,*) :: p
            real dimension(imid,nlat,3),depend(imid) :: pin
            real dimension(*) :: walin
            double precision dimension(*) :: dwork
        end subroutine ses1
        subroutine zvinit(nlat,nlon,wzvin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: wzvin
            double precision dimension(*) :: dwork
        end subroutine zvinit
        subroutine zvini1(nlat,nlon,imid,zv,abc,czv,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(zv, 1) == nlat),depend(zv) :: nlat=shape(zv, 1)
            integer :: nlon
            integer, optional,check(shape(zv, 0) == imid),depend(zv) :: imid=shape(zv, 0)
            real dimension(imid,nlat,2) :: zv
            real dimension(1) :: abc
            double precision dimension(1) :: czv
            double precision dimension(1) :: work
        end subroutine zvini1
        subroutine zwinit(nlat,nlon,wzwin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: wzwin
            double precision dimension(*) :: dwork
        end subroutine zwinit
        subroutine zwini1(nlat,nlon,imid,zw,abc,czw,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(zw, 1) == nlat),depend(zw) :: nlat=shape(zw, 1)
            integer :: nlon
            integer, optional,check(shape(zw, 0) == imid),depend(zw) :: imid=shape(zw, 0)
            real dimension(imid,nlat,2) :: zw
            real dimension(1) :: abc
            double precision dimension(1) :: czw
            double precision dimension(1) :: work
        end subroutine zwini1
        subroutine zvin(ityp,nlat,nlon,m,zv,i3,wzvin) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: ityp
            integer :: nlat
            integer :: nlon
            integer :: m
            real dimension(1) :: zv
            integer :: i3
            real dimension(1) :: wzvin
        end subroutine zvin
        subroutine zvin1(ityp,nlat,m,zv,imid,i3,zvz,zv1,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: ityp
            integer, optional,check(shape(zv, 1) == nlat),depend(zv) :: nlat=shape(zv, 1)
            integer :: m
            real dimension(imid,nlat,3) :: zv
            integer, optional,check(shape(zv, 0) == imid),depend(zv) :: imid=shape(zv, 0)
            integer :: i3
            real dimension(imid,1),depend(imid) :: zvz
            real dimension(imid,1),depend(imid) :: zv1
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine zvin1
        subroutine zwin(ityp,nlat,nlon,m,zw,i3,wzwin) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: ityp
            integer :: nlat
            integer :: nlon
            integer :: m
            real dimension(1) :: zw
            integer :: i3
            real dimension(1) :: wzwin
        end subroutine zwin
        subroutine zwin1(ityp,nlat,m,zw,imid,i3,zw1,zw2,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: ityp
            integer, optional,check(shape(zw, 1) == nlat),depend(zw) :: nlat=shape(zw, 1)
            integer :: m
            real dimension(imid,nlat,3) :: zw
            integer, optional,check(shape(zw, 0) == imid),depend(zw) :: imid=shape(zw, 0)
            integer :: i3
            real dimension(imid,1),depend(imid) :: zw1
            real dimension(imid,1),depend(imid) :: zw2
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine zwin1
        subroutine vbinit(nlat,nlon,wvbin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: wvbin
            double precision dimension(*) :: dwork
        end subroutine vbinit
        subroutine vbini1(nlat,nlon,imid,vb,abc,cvb,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(vb, 1) == nlat),depend(vb) :: nlat=shape(vb, 1)
            integer :: nlon
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            real dimension(imid,nlat,2) :: vb
            real dimension(1) :: abc
            double precision dimension(1) :: cvb
            double precision dimension(1) :: work
        end subroutine vbini1
        subroutine wbinit(nlat,nlon,wwbin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: wwbin
            double precision dimension(*) :: dwork
        end subroutine wbinit
        subroutine wbini1(nlat,nlon,imid,wb,abc,cwb,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(wb, 1) == nlat),depend(wb) :: nlat=shape(wb, 1)
            integer :: nlon
            integer, optional,check(shape(wb, 0) == imid),depend(wb) :: imid=shape(wb, 0)
            real dimension(imid,nlat,2) :: wb
            real dimension(1) :: abc
            double precision dimension(1) :: cwb
            double precision dimension(1) :: work
        end subroutine wbini1
        subroutine vbin(ityp,nlat,nlon,m,vb,i3,wvbin) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: ityp
            integer :: nlat
            integer :: nlon
            integer :: m
            real dimension(1) :: vb
            integer :: i3
            real dimension(1) :: wvbin
        end subroutine vbin
        subroutine vbin1(ityp,nlat,m,vb,imid,i3,vbz,vb1,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: ityp
            integer, optional,check(shape(vb, 1) == nlat),depend(vb) :: nlat=shape(vb, 1)
            integer :: m
            real dimension(imid,nlat,3) :: vb
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            integer :: i3
            real dimension(imid,1),depend(imid) :: vbz
            real dimension(imid,1),depend(imid) :: vb1
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine vbin1
        subroutine wbin(ityp,nlat,nlon,m,wb,i3,wwbin) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: ityp
            integer :: nlat
            integer :: nlon
            integer :: m
            real dimension(1) :: wb
            integer :: i3
            real dimension(1) :: wwbin
        end subroutine wbin
        subroutine wbin1(ityp,nlat,m,wb,imid,i3,wb1,wb2,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: ityp
            integer, optional,check(shape(wb, 1) == nlat),depend(wb) :: nlat=shape(wb, 1)
            integer :: m
            real dimension(imid,nlat,3) :: wb
            integer, optional,check(shape(wb, 0) == imid),depend(wb) :: imid=shape(wb, 0)
            integer :: i3
            real dimension(imid,1),depend(imid) :: wb1
            real dimension(imid,1),depend(imid) :: wb2
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine wbin1
        subroutine dzvk(nlat,m,n,czv,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: m
            integer :: n
            double precision dimension(1) :: czv
            double precision dimension(1) :: work
        end subroutine dzvk
        subroutine dzvt(nlat,m,n,th,czv,zvh) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: m
            integer :: n
            double precision :: th
            double precision dimension(1) :: czv
            double precision :: zvh
        end subroutine dzvt
        subroutine dzwk(nlat,m,n,czw,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: m
            integer :: n
            double precision dimension(1) :: czw
            double precision dimension(1) :: work
        end subroutine dzwk
        subroutine dzwt(nlat,m,n,th,czw,zwh) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: m
            integer :: n
            double precision :: th
            double precision dimension(1) :: czw
            double precision :: zwh
        end subroutine dzwt
        subroutine dvbk(m,n,cv,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision dimension(1) :: cv
            double precision dimension(1) :: work
        end subroutine dvbk
        subroutine dwbk(m,n,cw,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision dimension(1) :: cw
            double precision dimension(1) :: work
        end subroutine dwbk
        subroutine dvbt(m,n,theta,cv,vh) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision :: theta
            double precision dimension(1) :: cv
            double precision :: vh
        end subroutine dvbt
        subroutine dwbt(m,n,theta,cw,wh) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision :: theta
            double precision dimension(1) :: cw
            double precision :: wh
        end subroutine dwbt
        subroutine rabcv(nlat,nlon,abc) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: abc
        end subroutine rabcv
        subroutine rabcv1(nlat,nlon,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine rabcv1
        subroutine rabcw(nlat,nlon,abc) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: abc
        end subroutine rabcw
        subroutine rabcw1(nlat,nlon,a,b,c) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: a
            real dimension(1) :: b
            real dimension(1) :: c
        end subroutine rabcw1
        subroutine vtinit(nlat,nlon,wvbin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(*) :: wvbin
            double precision dimension(*) :: dwork
        end subroutine vtinit
        subroutine vtini1(nlat,nlon,imid,vb,abc,cvb,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(vb, 1) == nlat),depend(vb) :: nlat=shape(vb, 1)
            integer :: nlon
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            real dimension(imid,nlat,2) :: vb
            real dimension(1) :: abc
            double precision dimension(1) :: cvb
            double precision dimension(*) :: work
        end subroutine vtini1
        subroutine wtinit(nlat,nlon,wwbin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: wwbin
            double precision dimension(*) :: dwork
        end subroutine wtinit
        subroutine wtini1(nlat,nlon,imid,wb,abc,cwb,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(wb, 1) == nlat),depend(wb) :: nlat=shape(wb, 1)
            integer :: nlon
            integer, optional,check(shape(wb, 0) == imid),depend(wb) :: imid=shape(wb, 0)
            real dimension(imid,nlat,2) :: wb
            real dimension(1) :: abc
            double precision dimension(*) :: cwb
            double precision dimension(*) :: work
        end subroutine wtini1
        subroutine vtgint(nlat,nlon,theta,wvbin,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            double precision dimension(*) :: theta
            real dimension(*) :: wvbin
            double precision dimension(*) :: work
        end subroutine vtgint
        subroutine vtgit1(nlat,nlon,imid,theta,vb,abc,cvb,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(vb, 1) == nlat),depend(vb) :: nlat=shape(vb, 1)
            integer :: nlon
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            double precision dimension(*) :: theta
            real dimension(imid,nlat,2) :: vb
            real dimension(*) :: abc
            double precision dimension(*) :: cvb
            double precision dimension(*) :: work
        end subroutine vtgit1
        subroutine wtgint(nlat,nlon,theta,wwbin,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            double precision dimension(*) :: theta
            real dimension(*) :: wwbin
            double precision dimension(*) :: work
        end subroutine wtgint
        subroutine wtgit1(nlat,nlon,imid,theta,wb,abc,cwb,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(wb, 1) == nlat),depend(wb) :: nlat=shape(wb, 1)
            integer :: nlon
            integer, optional,check(shape(wb, 0) == imid),depend(wb) :: imid=shape(wb, 0)
            double precision dimension(*) :: theta
            real dimension(imid,nlat,2) :: wb
            real dimension(1) :: abc
            double precision dimension(*) :: cwb
            double precision dimension(*) :: work
        end subroutine wtgit1
        subroutine dvtk(m,n,cv,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision dimension(*) :: cv
            double precision dimension(*) :: work
        end subroutine dvtk
        subroutine dwtk(m,n,cw,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision dimension(*) :: cw
            double precision dimension(*) :: work
        end subroutine dwtk
        subroutine dvtt(m,n,theta,cv,vh) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision :: theta
            double precision dimension(1) :: cv
            double precision :: vh
        end subroutine dvtt
        subroutine dwtt(m,n,theta,cw,wh) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: m
            integer :: n
            double precision :: theta
            double precision dimension(1) :: cw
            double precision :: wh
        end subroutine dwtt
        subroutine vbgint(nlat,nlon,theta,wvbin,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            double precision dimension(*) :: theta
            real dimension(1) :: wvbin
            double precision dimension(*) :: work
        end subroutine vbgint
        subroutine vbgit1(nlat,nlon,imid,theta,vb,abc,cvb,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(vb, 1) == nlat),depend(vb) :: nlat=shape(vb, 1)
            integer :: nlon
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            double precision dimension(1) :: theta
            real dimension(imid,nlat,2) :: vb
            real dimension(1) :: abc
            double precision dimension(1) :: cvb
            double precision dimension(1) :: work
        end subroutine vbgit1
        subroutine wbgint(nlat,nlon,theta,wwbin,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer :: nlat
            integer :: nlon
            double precision dimension(*) :: theta
            real dimension(1) :: wwbin
            double precision dimension(*) :: work
        end subroutine wbgint
        subroutine wbgit1(nlat,nlon,imid,theta,wb,abc,cwb,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\sphcom.f
            integer, optional,check(shape(wb, 1) == nlat),depend(wb) :: nlat=shape(wb, 1)
            integer :: nlon
            integer, optional,check(shape(wb, 0) == imid),depend(wb) :: imid=shape(wb, 0)
            double precision dimension(1) :: theta
            real dimension(imid,nlat,2) :: wb
            real dimension(1) :: abc
            double precision dimension(1) :: cwb
            double precision dimension(1) :: work
        end subroutine wbgit1
        subroutine twodtooned(dataspec,a,b,nlat,ntrunc,nt) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\twodtooned.f
            complex dimension((2 + 3 * ntrunc + ntrunc * ntrunc) / 2,nt),check(shape(dataspec, 0) == (2 + 3 * ntrunc + ntrunc * ntrunc) / 2),depend(ntrunc) :: dataspec
            real dimension(nlat,nlat,nt),depend(nt) :: a
            real dimension(nlat,nlat,nt),depend(nlat,nt) :: b
            integer, optional,check(shape(a, 0) == nlat),depend(a) :: nlat=shape(a, 0)
            integer, required,intent(in) :: ntrunc
            integer, optional,check(shape(dataspec, 1) == nt),depend(dataspec) :: nt=shape(dataspec, 1)
        end subroutine twodtooned
        subroutine twodtooned_vrtdiv(vrtspec,divspec,br,bi,cr,ci,nlat,ntrunc,nt,rsphere) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\twodtooned_vrtdiv.f
            complex dimension((2 + 3 * ntrunc + ntrunc * ntrunc) / 2,nt),check(shape(vrtspec, 0) == (2 + 3 * ntrunc + ntrunc * ntrunc) / 2),depend(ntrunc) :: vrtspec
            complex dimension((2 + 3 * ntrunc + ntrunc * ntrunc) / 2,nt),check(shape(divspec, 0) == (2 + 3 * ntrunc + ntrunc * ntrunc) / 2),depend(ntrunc,nt) :: divspec
            real dimension(nlat,nlat,nt),depend(nt) :: br
            real dimension(nlat,nlat,nt),depend(nlat,nt) :: bi
            real dimension(nlat,nlat,nt),depend(nlat,nt) :: cr
            real dimension(nlat,nlat,nt),depend(nlat,nt) :: ci
            integer, optional,check(shape(br, 0) == nlat),depend(br) :: nlat=shape(br, 0)
            integer, required,intent(in) :: ntrunc
            integer, optional,check(shape(vrtspec, 1) == nt),depend(vrtspec) :: nt=shape(vrtspec, 1)
            real :: rsphere
        end subroutine twodtooned_vrtdiv
        subroutine vhaec(nlat,nlon,ityp,nt,v,w,idvw,jdvw,br,bi,cr,ci,mdab,ndab,wvhaec,lvhaec,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhaec.f
            integer :: nlat
            integer :: nlon
            integer :: ityp
            integer :: nt
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(1) :: wvhaec
            integer :: lvhaec
            real dimension(1) :: work
            integer :: lwork
            integer :: ierror
        end subroutine vhaec
        subroutine vhaec1(nlat,nlon,ityp,nt,imid,idvw,jdvw,v,w,mdab,ndab,br,bi,cr,ci,idv,ve,vo,we,wo,zv,zw,wzvin,wzwin,wrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhaec.f
            integer, optional,check(shape(zv, 1) == nlat),depend(zv) :: nlat=shape(zv, 1)
            integer, optional,check(shape(ve, 1) == nlon),depend(ve) :: nlon=shape(ve, 1)
            integer :: ityp
            integer :: nt
            integer, optional,check(shape(zv, 0) == imid),depend(zv) :: imid=shape(zv, 0)
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(ve, 0) == idv),depend(ve) :: idv=shape(ve, 0)
            real dimension(idv,nlon,1) :: ve
            real dimension(idv,nlon,1),depend(nlon,idv) :: vo
            real dimension(idv,nlon,1),depend(nlon,idv) :: we
            real dimension(idv,nlon,1),depend(nlon,idv) :: wo
            real dimension(imid,nlat,3) :: zv
            real dimension(imid,nlat,3),depend(imid,nlat) :: zw
            real dimension(1) :: wzvin
            real dimension(1) :: wzwin
            real dimension(1) :: wrfft
        end subroutine vhaec1
        subroutine vhaeci(nlat,nlon,wvhaec,lvhaec,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhaec.f
            integer :: nlat
            integer :: nlon
            real dimension(lvhaec) :: wvhaec
            integer, optional,check(shape(wvhaec, 0) == lvhaec),depend(wvhaec) :: lvhaec=shape(wvhaec, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine vhaeci
        subroutine vhaes(nlat,nlon,ityp,nt,v,w,idvw,jdvw,br,bi,cr,ci,mdab,ndab,wvhaes,lvhaes,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhaes.f
            integer :: nlat
            integer :: nlon
            integer :: ityp
            integer :: nt
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(lvhaes) :: wvhaes
            integer :: lvhaes
            real dimension(lwork) :: work
            integer :: lwork
            integer :: ierror
        end subroutine vhaes
        subroutine vhaes1(nlat,nlon,ityp,nt,imid,idvw,jdvw,v,w,mdab,ndab,br,bi,cr,ci,idv,ve,vo,we,wo,work,idz,zv,zw,wrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhaes.f
            integer :: nlat
            integer, optional,check(shape(ve, 1) == nlon),depend(ve) :: nlon=shape(ve, 1)
            integer :: ityp
            integer :: nt
            integer :: imid
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(ve, 0) == idv),depend(ve) :: idv=shape(ve, 0)
            real dimension(idv,nlon,1) :: ve
            real dimension(idv,nlon,1),depend(nlon,idv) :: vo
            real dimension(idv,nlon,1),depend(nlon,idv) :: we
            real dimension(idv,nlon,1),depend(nlon,idv) :: wo
            real dimension(1) :: work
            integer, optional,check(shape(zv, 0) == idz),depend(zv) :: idz=shape(zv, 0)
            real dimension(idz,1) :: zv
            real dimension(idz,1),depend(idz) :: zw
            real dimension(1) :: wrfft
        end subroutine vhaes1
        subroutine vhaesi(nlat,nlon,wvhaes,lvhaes,work,lwork,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhaes.f
            integer :: nlat
            integer :: nlon
            real dimension(lvhaes) :: wvhaes
            integer, optional,check(shape(wvhaes, 0) == lvhaes),depend(wvhaes) :: lvhaes=shape(wvhaes, 0)
            real dimension(lwork) :: work
            integer, optional,check(shape(work, 0) == lwork),depend(work) :: lwork=shape(work, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine vhaesi
        subroutine vea1(nlat,nlon,imid,zv,zw,idz,zin,wzvin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhaes.f
            integer, optional,check(shape(zin, 1) == nlat),depend(zin) :: nlat=shape(zin, 1)
            integer :: nlon
            integer, optional,check(shape(zin, 0) == imid),depend(zin) :: imid=shape(zin, 0)
            real dimension(idz,1) :: zv
            real dimension(idz,1),depend(idz) :: zw
            integer, optional,check(shape(zv, 0) == idz),depend(zv) :: idz=shape(zv, 0)
            real dimension(imid,nlat,3) :: zin
            real dimension(1) :: wzvin
            double precision dimension(*) :: dwork
        end subroutine vea1
        subroutine vhagc(nlat,nlon,ityp,nt,v,w,idvw,jdvw,br,bi,cr,ci,mdab,ndab,wvhagc,lvhagc,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhagc.f
            integer :: nlat
            integer :: nlon
            integer :: ityp
            integer :: nt
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(1) :: wvhagc
            integer :: lvhagc
            real dimension(1) :: work
            integer :: lwork
            integer :: ierror
        end subroutine vhagc
        subroutine vhagc1(nlat,nlon,ityp,nt,imid,idvw,jdvw,v,w,mdab,ndab,br,bi,cr,ci,idv,ve,vo,we,wo,vb,wb,wts,wvbin,wwbin,wrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhagc.f
            integer, optional,check(shape(vb, 1) == nlat),depend(vb) :: nlat=shape(vb, 1)
            integer, optional,check(shape(ve, 1) == nlon),depend(ve) :: nlon=shape(ve, 1)
            integer :: ityp
            integer :: nt
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(ve, 0) == idv),depend(ve) :: idv=shape(ve, 0)
            real dimension(idv,nlon,1) :: ve
            real dimension(idv,nlon,1),depend(nlon,idv) :: vo
            real dimension(idv,nlon,1),depend(nlon,idv) :: we
            real dimension(idv,nlon,1),depend(nlon,idv) :: wo
            real dimension(imid,nlat,3) :: vb
            real dimension(imid,nlat,3),depend(imid,nlat) :: wb
            real dimension(*) :: wts
            real dimension(1) :: wvbin
            real dimension(1) :: wwbin
            real dimension(1) :: wrfft
        end subroutine vhagc1
        subroutine vhagci(nlat,nlon,wvhagc,lvhagc,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhagc.f
            integer :: nlat
            integer :: nlon
            real dimension(1) :: wvhagc
            integer :: lvhagc
            double precision dimension(*) :: dwork
            integer :: ldwork
            integer :: ierror
        end subroutine vhagci
        subroutine setwts(imid,dwts,wts) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhagc.f
            integer, optional,check(shape(dwts, 0) == imid),depend(dwts) :: imid=shape(dwts, 0)
            double precision dimension(imid) :: dwts
            real dimension(imid),depend(imid) :: wts
        end subroutine setwts
        subroutine vhags(nlat,nlon,ityp,nt,v,w,idvw,jdvw,br,bi,cr,ci,mdab,ndab,wvhags,lvhags,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhags.f
            integer :: nlat
            integer :: nlon
            integer :: ityp
            integer :: nt
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(1) :: wvhags
            integer :: lvhags
            real dimension(1) :: work
            integer :: lwork
            integer :: ierror
        end subroutine vhags
        subroutine vhags1(nlat,nlon,ityp,nt,imid,idvw,jdvw,v,w,mdab,ndab,br,bi,cr,ci,idv,ve,vo,we,wo,work,idz,vb,wb,wrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhags.f
            integer :: nlat
            integer, optional,check(shape(ve, 1) == nlon),depend(ve) :: nlon=shape(ve, 1)
            integer :: ityp
            integer :: nt
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(ve, 0) == idv),depend(ve) :: idv=shape(ve, 0)
            real dimension(idv,nlon,1) :: ve
            real dimension(idv,nlon,1),depend(nlon,idv) :: vo
            real dimension(idv,nlon,1),depend(nlon,idv) :: we
            real dimension(idv,nlon,1),depend(nlon,idv) :: wo
            real dimension(1) :: work
            integer :: idz
            real dimension(imid,1) :: vb
            real dimension(imid,1),depend(imid) :: wb
            real dimension(1) :: wrfft
        end subroutine vhags1
        subroutine vhagsi(nlat,nlon,wvhags,lvhags,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhags.f
            integer :: nlat
            integer :: nlon
            real dimension(lvhags) :: wvhags
            integer, optional,check(shape(wvhags, 0) == lvhags),depend(wvhags) :: lvhags=shape(wvhags, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine vhagsi
        subroutine vhgai1(nlat,imid,vb,wb,dthet,dwts,dpbar,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhags.f
            integer, optional,check(shape(dpbar, 1) == nlat),depend(dpbar) :: nlat=shape(dpbar, 1)
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            real dimension(imid,*) :: vb
            real dimension(imid,*),depend(imid) :: wb
            double precision dimension(*) :: dthet
            double precision dimension(*) :: dwts
            double precision dimension(imid,nlat,3),depend(imid) :: dpbar
            double precision dimension(*) :: work
        end subroutine vhgai1
        function indx(m,n,nlat) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhags.f
            integer :: m
            integer :: n
            integer :: nlat
            integer :: indx
        end function indx
        subroutine vhsec(nlat,nlon,ityp,nt,v,w,idvw,jdvw,br,bi,cr,ci,mdab,ndab,wvhsec,lvhsec,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsec.f
            integer :: nlat
            integer :: nlon
            integer :: ityp
            integer :: nt
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(1) :: wvhsec
            integer :: lvhsec
            real dimension(1) :: work
            integer :: lwork
            integer :: ierror
        end subroutine vhsec
        subroutine vhsec1(nlat,nlon,ityp,nt,imid,idvw,jdvw,v,w,mdab,ndab,br,bi,cr,ci,idv,ve,vo,we,wo,vb,wb,wvbin,wwbin,wrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsec.f
            integer, optional,check(shape(vb, 1) == nlat),depend(vb) :: nlat=shape(vb, 1)
            integer, optional,check(shape(ve, 1) == nlon),depend(ve) :: nlon=shape(ve, 1)
            integer :: ityp
            integer :: nt
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(ve, 0) == idv),depend(ve) :: idv=shape(ve, 0)
            real dimension(idv,nlon,1) :: ve
            real dimension(idv,nlon,1),depend(nlon,idv) :: vo
            real dimension(idv,nlon,1),depend(nlon,idv) :: we
            real dimension(idv,nlon,1),depend(nlon,idv) :: wo
            real dimension(imid,nlat,3) :: vb
            real dimension(imid,nlat,3),depend(imid,nlat) :: wb
            real dimension(1) :: wvbin
            real dimension(1) :: wwbin
            real dimension(1) :: wrfft
        end subroutine vhsec1
        subroutine vhseci(nlat,nlon,wvhsec,lvhsec,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsec.f
            integer :: nlat
            integer :: nlon
            real dimension(lvhsec) :: wvhsec
            integer, optional,check(shape(wvhsec, 0) == lvhsec),depend(wvhsec) :: lvhsec=shape(wvhsec, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine vhseci
        subroutine vhses(nlat,nlon,ityp,nt,v,w,idvw,jdvw,br,bi,cr,ci,mdab,ndab,wvhses,lvhses,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhses.f
            integer :: nlat
            integer :: nlon
            integer :: ityp
            integer :: nt
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(lvhses) :: wvhses
            integer :: lvhses
            real dimension(lwork) :: work
            integer :: lwork
            integer :: ierror
        end subroutine vhses
        subroutine vhses1(nlat,nlon,ityp,nt,imid,idvw,jdvw,v,w,mdab,ndab,br,bi,cr,ci,idv,ve,vo,we,wo,work,idz,vb,wb,wrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhses.f
            integer :: nlat
            integer, optional,check(shape(ve, 1) == nlon),depend(ve) :: nlon=shape(ve, 1)
            integer :: ityp
            integer :: nt
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(ve, 0) == idv),depend(ve) :: idv=shape(ve, 0)
            real dimension(idv,nlon,1) :: ve
            real dimension(idv,nlon,1),depend(nlon,idv) :: vo
            real dimension(idv,nlon,1),depend(nlon,idv) :: we
            real dimension(idv,nlon,1),depend(nlon,idv) :: wo
            real dimension(1) :: work
            integer :: idz
            real dimension(imid,1) :: vb
            real dimension(imid,1),depend(imid) :: wb
            real dimension(1) :: wrfft
        end subroutine vhses1
        subroutine vhsesi(nlat,nlon,wvhses,lvhses,work,lwork,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhses.f
            integer :: nlat
            integer :: nlon
            real dimension(lvhses) :: wvhses
            integer, optional,check(shape(wvhses, 0) == lvhses),depend(wvhses) :: lvhses=shape(wvhses, 0)
            real dimension(lwork) :: work
            integer, optional,check(shape(work, 0) == lwork),depend(work) :: lwork=shape(work, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine vhsesi
        subroutine ves1(nlat,nlon,imid,vb,wb,idz,vin,wzvin,dwork) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhses.f
            integer, optional,check(shape(vin, 1) == nlat),depend(vin) :: nlat=shape(vin, 1)
            integer :: nlon
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            real dimension(imid,*) :: vb
            real dimension(imid,*),depend(imid) :: wb
            integer :: idz
            real dimension(imid,nlat,3),depend(imid) :: vin
            real dimension(*) :: wzvin
            double precision dimension(*) :: dwork
        end subroutine ves1
        subroutine vhsgc(nlat,nlon,ityp,nt,v,w,idvw,jdvw,br,bi,cr,ci,mdab,ndab,wvhsgc,lvhsgc,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsgc.f
            integer :: nlat
            integer :: nlon
            integer :: ityp
            integer :: nt
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(1) :: wvhsgc
            integer :: lvhsgc
            real dimension(1) :: work
            integer :: lwork
            integer :: ierror
        end subroutine vhsgc
        subroutine vhsgc1(nlat,nlon,ityp,nt,imid,idvw,jdvw,v,w,mdab,ndab,br,bi,cr,ci,idv,ve,vo,we,wo,vb,wb,wvbin,wwbin,wrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsgc.f
            integer, optional,check(shape(vb, 1) == nlat),depend(vb) :: nlat=shape(vb, 1)
            integer, optional,check(shape(ve, 1) == nlon),depend(ve) :: nlon=shape(ve, 1)
            integer :: ityp
            integer :: nt
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(ve, 0) == idv),depend(ve) :: idv=shape(ve, 0)
            real dimension(idv,nlon,1) :: ve
            real dimension(idv,nlon,1),depend(nlon,idv) :: vo
            real dimension(idv,nlon,1),depend(nlon,idv) :: we
            real dimension(idv,nlon,1),depend(nlon,idv) :: wo
            real dimension(imid,nlat,3) :: vb
            real dimension(imid,nlat,3),depend(imid,nlat) :: wb
            real dimension(1) :: wvbin
            real dimension(1) :: wwbin
            real dimension(1) :: wrfft
        end subroutine vhsgc1
        subroutine vhsgci(nlat,nlon,wvhsgc,lvhsgc,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsgc.f
            integer :: nlat
            integer :: nlon
            real dimension(lvhsgc) :: wvhsgc
            integer, optional,check(shape(wvhsgc, 0) == lvhsgc),depend(wvhsgc) :: lvhsgc=shape(wvhsgc, 0)
            double precision dimension(ldwork) :: dwork
            integer, optional,check(shape(dwork, 0) == ldwork),depend(dwork) :: ldwork=shape(dwork, 0)
            integer :: ierror
        end subroutine vhsgci
        subroutine vhsgs(nlat,nlon,ityp,nt,v,w,idvw,jdvw,br,bi,cr,ci,mdab,ndab,wvhsgs,lvhsgs,work,lwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsgs.f
            integer :: nlat
            integer :: nlon
            integer :: ityp
            integer :: nt
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(1) :: wvhsgs
            integer :: lvhsgs
            real dimension(1) :: work
            integer :: lwork
            integer :: ierror
        end subroutine vhsgs
        subroutine vhsgs1(nlat,nlon,ityp,nt,imid,idvw,jdvw,v,w,mdab,ndab,br,bi,cr,ci,idv,ve,vo,we,wo,work,idz,vb,wb,wrfft) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsgs.f
            integer :: nlat
            integer, optional,check(shape(ve, 1) == nlon),depend(ve) :: nlon=shape(ve, 1)
            integer :: ityp
            integer :: nt
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            integer, optional,check(shape(v, 0) == idvw),depend(v) :: idvw=shape(v, 0)
            integer, optional,check(shape(v, 1) == jdvw),depend(v) :: jdvw=shape(v, 1)
            real dimension(idvw,jdvw,1) :: v
            real dimension(idvw,jdvw,1),depend(idvw,jdvw) :: w
            integer, optional,check(shape(br, 0) == mdab),depend(br) :: mdab=shape(br, 0)
            integer, optional,check(shape(br, 1) == ndab),depend(br) :: ndab=shape(br, 1)
            real dimension(mdab,ndab,1) :: br
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: bi
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: cr
            real dimension(mdab,ndab,1),depend(ndab,mdab) :: ci
            integer, optional,check(shape(ve, 0) == idv),depend(ve) :: idv=shape(ve, 0)
            real dimension(idv,nlon,1) :: ve
            real dimension(idv,nlon,1),depend(nlon,idv) :: vo
            real dimension(idv,nlon,1),depend(nlon,idv) :: we
            real dimension(idv,nlon,1),depend(nlon,idv) :: wo
            real dimension(1) :: work
            integer :: idz
            real dimension(imid,1) :: vb
            real dimension(imid,1),depend(imid) :: wb
            real dimension(1) :: wrfft
        end subroutine vhsgs1
        subroutine vhsgsi(nlat,nlon,wvhsgs,lvhsgs,dwork,ldwork,ierror) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsgs.f
            integer :: nlat
            integer :: nlon
            real dimension(*) :: wvhsgs
            integer :: lvhsgs
            double precision dimension(*) :: dwork
            integer :: ldwork
            integer :: ierror
        end subroutine vhsgsi
        subroutine vhgsi1(nlat,imid,vb,wb,dthet,dwts,dpbar,work) ! in :_spherepack:d:\skyborn\src\skyborn\spharm\src\vhsgs.f
            integer, optional,check(shape(dpbar, 1) == nlat),depend(dpbar) :: nlat=shape(dpbar, 1)
            integer, optional,check(shape(vb, 0) == imid),depend(vb) :: imid=shape(vb, 0)
            real dimension(imid,*) :: vb
            real dimension(imid,*),depend(imid) :: wb
            double precision dimension(*) :: dthet
            double precision dimension(*) :: dwts
            double precision dimension(imid,nlat,3),depend(imid) :: dpbar
            double precision dimension(*) :: work
        end subroutine vhgsi1
    end interface
end python module spherepack

! This file was auto-generated with f2py (version:2.3.1).
! See:
! https://web.archive.org/web/20140822061353/http://cens.ioc.ee/projects/f2py2e
